{"version":3,"sources":["ClassComponent.js","FunctionalComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Component","FunctionalComponent","inputRef","useRef","useState","counter","setCounter","text","setText","value","console","log","useEffect","className","onClick","current","id","ref","type","onChange","e","target","parentElement","style","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAE4CA,Y,MCmD7BC,EAnDa,WAExB,IAAMC,EAAWC,iBAAO,MAExB,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAQN,iBAAO,GACrBO,QAAQC,IAAI,QAASF,GAErBG,qBAAU,WACNF,QAAQC,IAAI,eAEb,CAACN,IAyBJ,OACI,sBAAKQ,UAAU,WAAf,UACI,sDACA,0CAAaR,KACb,wBAAQS,QAAS,kBA1BrBR,EAAWD,EAAU,QACrBI,EAAMM,QAAUN,EAAMM,QAAU,IAyB5B,sBACA,wBAAQD,QAAS,WAvBrBR,EAAWD,EAAU,IAuBjB,sBACA,uBACA,uBAAOW,GAAG,MAAMC,IAAKf,EAAUgB,KAAK,OAAOT,MAAOF,EAAMY,SAd7C,SAACC,GAChBZ,EAAQY,EAAEC,OAAOZ,UAcb,wBAAQK,QAAS,WAlBrBZ,EAASa,QAAQO,cAAcC,MAAMC,gBAAkBjB,GAkBnD,2BClCGkB,MATf,WACE,OACE,sBAAKZ,UAAU,MAAf,WACG,EACO,cAAC,EAAD,QCICa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a153679.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ClassComponent extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react'\n\nconst FunctionalComponent = () => {\n\n    const inputRef = useRef(null);\n    /* const divRef = useRef(null); */\n    const [counter, setCounter] = useState(0);\n    const [text, setText] = useState(\"\");\n    const value = useRef(0);\n    console.log('value', value);\n\n    useEffect(() => {\n        console.log('useEffect')\n        //return\n    }, [counter])\n\n    const increase = () => {\n        setCounter(counter + 1);\n        value.current = value.current + 1;\n    }\n    const decrease = () => {\n        setCounter(counter - 1);\n    }\n\n    const changeBGColor = () => {\n        // console.log(inputRef.current.value)\n        /* const newInput = document.querySelector('input');\n        console.log(newInput);\n        newInput.style.backgroundColor = text; */\n        inputRef.current.parentElement.style.backgroundColor = text;\n    }\n\n    const handleText = (e) => {\n        setText(e.target.value);\n    }\n\n    /*  const onDivBorder = () => {\n         divRef.current.style.border = \"10px solid black\";\n     } */\n    return (\n        <div className=\"function\" /* ref={divRef} */>\n            <h2>Functional Component</h2>\n            <p>Counter: {counter}</p>\n            <button onClick={() => increase()}>Increase</button>\n            <button onClick={() => decrease()}>Decrease</button>\n            <hr />\n            <input id=\"new\" ref={inputRef} type='text' value={text} onChange={handleText} />\n            <button onClick={() => changeBGColor()}> BG Color</button>\n            {/* <button onClick={() => onDivBorder()}> Border</button> */}\n        </div>\n    )\n}\n\nexport default FunctionalComponent\n","import './App.css';\nimport ClassComponent from './ClassComponent';\nimport FunctionalComponent from './FunctionalComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     { false && <ClassComponent />}\n     { true ? <FunctionalComponent /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}